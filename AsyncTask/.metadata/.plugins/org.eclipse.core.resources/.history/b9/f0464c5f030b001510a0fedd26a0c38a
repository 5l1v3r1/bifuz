package com.example.asynctask;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.jar.JarException;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Environment;
import android.util.Log;
import android.widget.Toast;
public class MyAsyncTask extends AsyncTask<String, Void, String> {

	private Context context;
	private PrintWriter printWriter;

	public MyAsyncTask(Context context) {
        this.context = context;
    }
	
	@Override
	protected String doInBackground(String... params) {
		String type;
		if (params.length>0){
			type=params[0];
			Intent i=new Intent();
			switch (type) {
			  case "broadcast":
				   if (params.length==3){
					  	i.setComponent(new ComponentName(params[1], params[2]));
					  	final Intent myint=i;
					  	final String p1 = params[1];
					  	final String p2 = params[2];
//					  	Thread thread = new Thread() {
//					  	    @Override
//					  	    public void run() {
//					  	    	
//					  	    }
//					  	};
//
//					  	thread.start();
//						try {
//							thread.join();
//						} catch (InterruptedException e) {
//							// TODO Auto-generated catch block
//							e.printStackTrace();
//						}
						try {
							 context.sendBroadcast(myint);
						 }
						catch(Exception e) {
						    Log.e("Fuzz exception:", e.toString());
						    
						}
						catch(Error e2) {
						    Log.e("Fuzz error:", e2.toString());
						   
						}
//						catch (RuntimeException e) {
//							 Log.e("I caught: " ,e.getMessage());
//							 return type+ "_" + params[1] ;
//						 }
//						catch(Error e2) {
//							System.out.println("I caught fatal : " + e2);
//						}
						return type+ "_" + params[1] ;
				   }
				  return "Bad Args";
			  case "intent":
				  if (params.length==10){
					  	i.setComponent(new ComponentName(params[1], params[2]));
						try {
							
							i.setAction(params[3]);
							i.addCategory(params[4]);
							int f=Integer.parseInt(params[5].substring(3),16);
							i.addFlags(f);
							i.setData(Uri.parse(params[6]));
							String extra_type = params[7];
							if (extra_type.equals("boolean")){
								i.putExtra(params[8], Boolean.parseBoolean(params[9]));
							}
							else {
								i.putExtra(params[8], Integer.parseInt(params[9]));
							}
							 context.startActivity(i);
						 }
						 catch (Exception e) {
							 System.out.println("I caught: " + e);
						 }
						
						return  type+ "_" + params[1] ;
				   }
				  return "Bad Args";
			  default:
				  return "Bad Args";
			}
		
				
			}
			else return "Bad Args";
		
		
	}
	
	@Override
    protected void onPostExecute(String result) {
		String filename;
		if (result.contains("Error"))
			filename="logcat_testError" +".txt";
		else filename="logcat_"+result +".txt";
		
//		filename="logcat_MyTest2.txt";
		File outputFile = new File(Environment.getExternalStorageDirectory(),filename);
		String filePath = outputFile.getAbsolutePath();
	
//		try {
//			Runtime.getRuntime().exec("log -p f -t BIFUZ");
////			Runtime.getRuntime().exec("logcat -c");
////			Runtime.getRuntime().exec(new String[]{"logcat", "-f", filePath, "MyAppTAG:V", "*:S"});
////			Runtime.getRuntime().exec(new String[]{"logcat", "-f", filePath, "MyAppTAG:V", "*:S"});
////			Process process = Runtime.getRuntime().exec("logcat -d -f "+filePath );
//			System.out.println("filename is" + filePath);
//
//		} catch (IOException e1) {
//			// TODO Auto-generated catch block
//			e1.printStackTrace();
//		}
		
		
		
		
		try {

			Process process = Runtime.getRuntime().exec("logcat -d ");
		      BufferedReader bufferedReader = new BufferedReader(
		      new InputStreamReader(process.getInputStream()));
		                       
		      StringBuilder log=new StringBuilder();
		      String line;
		      while ((line = bufferedReader.readLine()) != null) {
		        log.append(line);
		      }
		      
		      Toast.makeText(context, "Fuzz " + log.toString(), Toast.LENGTH_SHORT).show();
		      printWriter = new PrintWriter(new BufferedWriter(new FileWriter(filePath)));
		      printWriter.println(log.toString());
		      
		      printWriter.close();
		} catch (Exception e) {
					 System.out.println("Exception " + e);
			}
		
//		String seedfilename= "/data/local/tmp/test/" + result + ".sh";
//	    FileWriter fw = new FileWriter(seedfilename,true); //the true will append the new data
//	    fw.write("add a line\n");//appends the string to the file
//	    fw.close();	
	
		
		
    }
    
    

	public Integer Myfunc() {
		return 120;
	
	}

}
